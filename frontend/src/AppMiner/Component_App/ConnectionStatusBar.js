// components/ConnectionStatusBar.js
// =====================================================
// COMPONENT: ConnectionStatusBar
// PURPOSE: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
// FEATURES:
// - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏à
// - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
// - ‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° Sync ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
// - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
// - Date Entry Filter (NEW)
// =====================================================

import React from 'react';
import SyncCustomersButton from '../Component_App/SyncCustomersButton';
import DateFilterBadge from '../Component_App/DateFilterBadge';
import DateEntryFilter from '../Component_App/DateEntryFilter'; // ‡πÄ‡∏û‡∏¥‡πà‡∏° import

const ConnectionStatusBar = ({ 
  selectedPage, 
  selectedPageInfo, 
  lastUpdateTime, 
  currentTime,
  onSyncComplete,
  syncDateRange,
  onClearDateFilter,
  conversations,
  onDateEntryFilterChange,
  currentDateEntryFilter,
  isBackgroundLoading // ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡πÉ‡∏´‡∏°‡πà
}) => {
  const getUpdateStatus = () => {
    const diffMs = currentTime - lastUpdateTime;
    const diffMin = Math.floor(diffMs / 60000);
    
    if (diffMin < 1) return { status: "‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", color: "success" };
    if (diffMin < 5) return { status: `${diffMin} ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`, color: "warning" };
    return { status: `${diffMin} ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`, color: "danger" };
  };

  const updateStatus = getUpdateStatus();

  return (
    <div className="connection-status-bar">
      <div className="status-left">
        <div className={`connection-badge ${selectedPage ? 'connected' : 'disconnected'}`}>
          <span className="status-icon">{selectedPage ? 'üü¢' : 'üî¥'}</span>
          <span className="status-text">
            {selectedPage ? `‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß: ${selectedPageInfo?.name}` : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠'}
          </span>
        </div>
       
        {selectedPage && (
          <SyncCustomersButton 
            selectedPage={selectedPage}
            onSyncComplete={onSyncComplete}
          />
        )}
        
        {/* Date Entry Filter - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ */}
        {selectedPage && conversations && (
          <DateEntryFilter
            conversations={conversations}
            onFilterChange={onDateEntryFilterChange}
            currentFilter={currentDateEntryFilter}
          />
        )}

        {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° indicator ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö background loading */}
        {isBackgroundLoading && (
          <div className="background-loading-indicator">
            <span className="pulse-dot"></span>
            <span style={{ fontSize: '0.75rem', color: '#4299e1' }}>
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏¥‡∏á‡∏Ñ‡πå...
            </span>
          </div>
        )}
      </div>
      
      <div className="status-right">
        <span className="clock-display">
          üïê {currentTime.toLocaleTimeString('th-TH')}
        </span>
      </div>
    </div>
  );
};

export default ConnectionStatusBar;