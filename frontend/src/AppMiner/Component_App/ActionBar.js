// components/ActionBar.js
// =====================================================
// COMPONENT: ActionBar
// PURPOSE: ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ
// FEATURES:
// - ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
// - ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
// - ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
// - ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
// =====================================================

import React from 'react';

const ActionBar = ({ 
  selectedCount, 
  totalCount, 
  loading, 
  selectedPage,
  onOpenPopup, 
  onRefresh,
  canMineMore,
  remainingMines
}) => {
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° debug log
  console.log("ActionBar props:", {
    loading,
    selectedPage,
    hasOnRefresh: !!onRefresh
  });

  return (
    <div className="action-bar">
      <div className="action-left">
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏∏‡∏î */}
        <button
          onClick={onOpenPopup}
          className={`action-btn primary ${selectedCount > 0 ? 'active' : ''}`} 
          style={{paddingRight:"35%", paddingLeft:"10%" }}
          disabled={loading || selectedCount === 0}
        >
          <span className="btn-icon">‚õèÔ∏è</span>
          <span>‡∏Ç‡∏∏‡∏î</span><span>{selectedCount}</span>
        </button>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä - ‡πÄ‡∏û‡∏¥‡πà‡∏° error handling */}
        <button 
          onClick={() => {
            console.log("üîÑ Refresh button clicked!");
            if (typeof onRefresh === 'function') {
              onRefresh();
            } else {
              console.error("‚ùå onRefresh is not a function:", onRefresh);
            }
          }}
          className="action-btn secondary"  
          style={{paddingRight:"30%", paddingLeft:"10%"}}
          disabled={loading || !selectedPage}
          title={!selectedPage ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏à‡∏Å‡πà‡∏≠‡∏ô" : "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
        >
          <span className={`btn-icon ${loading ? 'spinning' : ''}`}>üîÑ</span>
          <span>{loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..." : "‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä"}</span>
        </button>
      </div>

      <div className="action-right">
        {remainingMines !== undefined && (
          <div className="remaining-mines">
            <span className="remaining-icon">üíé</span>
            <span>‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {remainingMines} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</span>
            {!canMineMore && (
              <div className="limit-reached-badge">
                <span className="badge-icon">üö´</span>
                <span>‡∏ñ‡∏∂‡∏á‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß</span>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default ActionBar;