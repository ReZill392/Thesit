// MinerGroup/components/GroupsGrid.js
import React from 'react';
import GroupCard from './GroupCard';

/**
 * GroupsGrid Component
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * - ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô default groups ‡πÅ‡∏•‡∏∞ user groups
 * - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ grid layout
 */
const GroupsGrid = ({
  defaultGroups,
  userGroups,
  selectedGroups,
  editingGroupId,
  groupScheduleCounts,
  onToggleSelect,
  onStartEdit,
  onDelete,
  onEditMessages,
  onViewSchedules,
  onSaveEdit,
  onCancelEdit
}) => {
  if (defaultGroups.length === 0 && userGroups.length === 0) {
    return (
      <div className="empty-state">
        <div className="empty-icon">üîç</div>
        <h3>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</h3>
        <p>‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏≠‡∏∑‡πà‡∏ô</p>
      </div>
    );
  }

  return (
    <>
      {defaultGroups.length > 0 && (
        <div className="default-groups-section">
          <h3 className="section-title">
            <span className="section-icon">‚≠ê</span>
            ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
          </h3>
          <div className="groups-grid">
            {defaultGroups.map((group) => (
              <GroupCard
                key={group.id}
                group={group}
                isSelected={selectedGroups.includes(group.id)}
                isEditing={editingGroupId === group.id}
                scheduleCount={groupScheduleCounts[group.id] || 0}
                onToggleSelect={onToggleSelect}
                onStartEdit={onStartEdit}
                onDelete={onDelete}
                onEditMessages={onEditMessages}
                onViewSchedules={onViewSchedules}
                onSaveEdit={onSaveEdit}
                onCancelEdit={onCancelEdit}
              />
            ))}
          </div>
        </div>
      )}

      {defaultGroups.length > 0 && userGroups.length > 0 && (
        <div className="groups-divider">
          <div className="divider-line"></div>
          <span className="divider-text">‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á</span>
          <div className="divider-line"></div>
        </div>
      )}

      {userGroups.length > 0 && (
        <div className="user-groups-section">
          <div className="groups-grid">
            {userGroups.map((group) => (
              <GroupCard
                key={group.id}
                group={group}
                isSelected={selectedGroups.includes(group.id)}
                isEditing={editingGroupId === group.id}
                scheduleCount={groupScheduleCounts[group.id] || 0}
                onToggleSelect={onToggleSelect}
                onStartEdit={onStartEdit}
                onDelete={onDelete}
                onEditMessages={onEditMessages}
                onViewSchedules={onViewSchedules}
                onSaveEdit={onSaveEdit}
                onCancelEdit={onCancelEdit}
              />
            ))}
          </div>
        </div>
      )}
    </>
  );
};

export default GroupsGrid;